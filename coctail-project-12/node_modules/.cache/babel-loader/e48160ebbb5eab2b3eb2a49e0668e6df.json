{"ast":null,"code":"var _jsxFileName = \"D:\\\\Sameer Files\\\\Web Development\\\\React 30 Project\\\\coctail-project-12\\\\src\\\\context.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport { useCallback } from 'react';\nconst url = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\nconst AppContext = React.createContext();\n\nconst AppProvider = ({\n  children\n}) => {\n  const [loading, setLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('a');\n  const [cocktails, setCocktails] = useState([]);\n  const fetchDrinks = useCallback(async () => {\n    setLoading(true);\n\n    try {\n      const response = await fetch(`${url}${searchTerm}`);\n      const data = await response.json();\n      console.log(data);\n      const {\n        drinks\n      } = data;\n\n      if (drinks) {\n        const newCocktails = drinks.map(item => {\n          const {\n            idDrink,\n            strDrink,\n            strDrinkThumb,\n            strAlcoholic,\n            strGlass\n          } = item;\n          return {\n            id: idDrink,\n            name: strDrink,\n            image: strDrinkThumb,\n            info: strAlcoholic,\n            glass: strGlass\n          };\n        });\n        setCocktails(newCocktails);\n      } else {\n        setCocktails([]);\n      }\n\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  }, [searchTerm]);\n  useEffect(() => {\n    fetchDrinks();\n  }, [searchTerm, fetchDrinks]);\n  return /*#__PURE__*/React.createElement(AppContext.Provider, {\n    value: {\n      loading,\n      cocktails,\n      searchTerm,\n      setSearchTerm\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, children);\n}; // make sure use\n\n\nexport const useGlobalContext = () => {\n  return useContext(AppContext);\n};\nexport { AppContext, AppProvider };","map":{"version":3,"sources":["D:/Sameer Files/Web Development/React 30 Project/coctail-project-12/src/context.js"],"names":["React","useState","useContext","useEffect","useCallback","url","AppContext","createContext","AppProvider","children","loading","setLoading","searchTerm","setSearchTerm","cocktails","setCocktails","fetchDrinks","response","fetch","data","json","console","log","drinks","newCocktails","map","item","idDrink","strDrink","strDrinkThumb","strAlcoholic","strGlass","id","name","image","info","glass","error","useGlobalContext"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,WAAT,QAA4B,OAA5B;AAEA,MAAMC,GAAG,GAAG,2DAAZ;AACA,MAAMC,UAAU,GAAGN,KAAK,CAACO,aAAN,EAAnB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAEpC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACW,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,GAAD,CAA5C;AACA,QAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,EAAD,CAA1C;AAEA,QAAMe,WAAW,GAAGZ,WAAW,CAAE,YAAY;AAC3CO,IAAAA,UAAU,CAAC,IAAD,CAAV;;AAEA,QAAI;AACF,YAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEb,GAAI,GAAEO,UAAW,EAArB,CAA5B;AACA,YAAMO,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,YAAM;AAAEI,QAAAA;AAAF,UAAaJ,IAAnB;;AAGA,UAAII,MAAJ,EAAY;AACV,cAAMC,YAAY,GAAGD,MAAM,CAACE,GAAP,CAAYC,IAAD,IAAU;AACxC,gBAAM;AACJC,YAAAA,OADI;AAEJC,YAAAA,QAFI;AAGJC,YAAAA,aAHI;AAIJC,YAAAA,YAJI;AAKJC,YAAAA;AALI,cAMFL,IANJ;AAQA,iBAAO;AACLM,YAAAA,EAAE,EAAEL,OADC;AAELM,YAAAA,IAAI,EAAEL,QAFD;AAGLM,YAAAA,KAAK,EAAEL,aAHF;AAILM,YAAAA,IAAI,EAAEL,YAJD;AAKLM,YAAAA,KAAK,EAAEL;AALF,WAAP;AAOD,SAhBoB,CAArB;AAiBAhB,QAAAA,YAAY,CAACS,YAAD,CAAZ;AACD,OAnBD,MAmBO;AACLT,QAAAA,YAAY,CAAC,EAAD,CAAZ;AACD;;AAGDJ,MAAAA,UAAU,CAAC,KAAD,CAAV;AAGD,KAlCD,CAqCA,OAAO0B,KAAP,EAAc;AACZhB,MAAAA,OAAO,CAACC,GAAR,CAAYe,KAAZ;AACA1B,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AAGF,GA9C8B,EA8C7B,CAACC,UAAD,CA9C6B,CAA/B;AAmDAT,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,WAAW;AACZ,GAFQ,EAEN,CAACJ,UAAD,EAAYI,WAAZ,CAFM,CAAT;AAOA,sBACE,oBAAC,UAAD,CAAY,QAAZ;AACE,IAAA,KAAK,EAAE;AAAEN,MAAAA,OAAF;AAAWI,MAAAA,SAAX;AAAsBF,MAAAA,UAAtB;AAAkCC,MAAAA;AAAlC,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGJ,QAHH,CADF;AAOD,CAvED,C,CAwEA;;;AACA,OAAO,MAAM6B,gBAAgB,GAAG,MAAM;AACpC,SAAOpC,UAAU,CAACI,UAAD,CAAjB;AACD,CAFM;AAIP,SAASA,UAAT,EAAqBE,WAArB","sourcesContent":["import React, { useState, useContext, useEffect } from 'react'\nimport { useCallback } from 'react'\n\nconst url = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s='\nconst AppContext = React.createContext()\n\nconst AppProvider = ({ children }) => {\n \n  const [loading, setLoading] = useState(true)\n  const [searchTerm, setSearchTerm] = useState('a')\n  const [cocktails, setCocktails] = useState([])\n\n  const fetchDrinks = useCallback( async () => {\n    setLoading(true)\n\n    try {\n      const response = await fetch(`${url}${searchTerm}`)\n      const data = await response.json()\n      console.log(data);\n      const { drinks } = data\n\n      \n      if (drinks) {\n        const newCocktails = drinks.map((item) => {\n          const {\n            idDrink,\n            strDrink,\n            strDrinkThumb,\n            strAlcoholic,\n            strGlass,\n          } = item\n\n          return {\n            id: idDrink,\n            name: strDrink,\n            image: strDrinkThumb,\n            info: strAlcoholic,\n            glass: strGlass,\n          }\n        })\n        setCocktails(newCocktails)\n      } else {\n        setCocktails([])\n      }\n\n\n      setLoading(false)\n\n\n    } \n    \n    \n    catch (error) {\n      console.log(error)\n      setLoading(false)\n    }\n\n\n  },[searchTerm])\n  \n  \n  \n  \n  useEffect(() => {\n    fetchDrinks()\n  }, [searchTerm,fetchDrinks])\n  \n  \n  \n  \n  return (\n    <AppContext.Provider\n      value={{ loading, cocktails, searchTerm, setSearchTerm }}\n    >\n      {children}\n    </AppContext.Provider>\n  )\n}\n// make sure use\nexport const useGlobalContext = () => {\n  return useContext(AppContext)\n}\n\nexport { AppContext, AppProvider }\n"]},"metadata":{},"sourceType":"module"}